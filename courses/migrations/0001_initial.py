# Generated by Django 5.2.1 on 2025-06-30 10:36

import django.core.validators
import django.db.models.deletion
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("description", django_ckeditor_5.fields.CKEditor5Field()),
                (
                    "short_description",
                    models.TextField(
                        help_text="Brief description for course cards", max_length=500
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        default="beginner",
                        max_length=15,
                    ),
                ),
                (
                    "course_type",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("paid", "Paid"),
                            ("premium", "Premium"),
                        ],
                        default="free",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True, null=True, upload_to="courses/thumbnails/"
                    ),
                ),
                (
                    "preview_video",
                    models.URLField(
                        blank=True, help_text="YouTube or Vimeo URL for course preview"
                    ),
                ),
                (
                    "duration_hours",
                    models.PositiveIntegerField(
                        default=0, help_text="Estimated course duration in hours"
                    ),
                ),
                (
                    "skill_level",
                    models.CharField(
                        blank=True,
                        help_text="e.g., 'No prior experience needed'",
                        max_length=50,
                    ),
                ),
                ("language", models.CharField(default="English", max_length=50)),
                (
                    "tags",
                    models.CharField(
                        blank=True, help_text="Comma-separated tags", max_length=500
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=100)),
                ("prerequisites", django_ckeditor_5.fields.CKEditor5Field(blank=True)),
                (
                    "learning_outcomes",
                    django_ckeditor_5.fields.CKEditor5Field(blank=True),
                ),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "allow_preview",
                    models.BooleanField(
                        default=True,
                        help_text="Allow non-enrolled users to preview first module",
                    ),
                ),
                ("certificate_enabled", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "instructor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="courses_taught",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseModule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_preview",
                    models.BooleanField(
                        default=False, help_text="Allow preview for non-enrolled users"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="modules",
                        to="courses.course",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseLesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", django_ckeditor_5.fields.CKEditor5Field()),
                (
                    "lesson_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("text", "Text/Article"),
                            ("interactive", "Interactive Exercise"),
                            ("quiz", "Quiz"),
                            ("assignment", "Assignment"),
                        ],
                        default="text",
                        max_length=15,
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True, help_text="YouTube, Vimeo, or direct video URL"
                    ),
                ),
                (
                    "video_duration",
                    models.PositiveIntegerField(
                        default=0, help_text="Video duration in seconds"
                    ),
                ),
                (
                    "attachments",
                    models.FileField(
                        blank=True, null=True, upload_to="courses/lessons/"
                    ),
                ),
                ("example_query", models.TextField(blank=True)),
                ("expected_output", models.TextField(blank=True)),
                (
                    "practice_query",
                    models.TextField(
                        blank=True, help_text="Query for students to practice"
                    ),
                ),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        default=0, help_text="Estimated lesson duration in minutes"
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_preview",
                    models.BooleanField(
                        default=False, help_text="Allow preview for non-enrolled users"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lessons",
                        to="courses.coursemodule",
                    ),
                ),
            ],
            options={
                "ordering": ["order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("review_text", models.TextField(blank=True)),
                ("is_verified_purchase", models.BooleanField(default=False)),
                ("is_approved", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserCourseEnrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Payment"),
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("expired", "Expired"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=15,
                    ),
                ),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("payment_method", models.CharField(blank=True, max_length=50)),
                ("payment_reference", models.CharField(blank=True, max_length=255)),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "completion_percentage",
                    models.PositiveIntegerField(
                        default=0,
                        validators=[django.core.validators.MaxValueValidator(100)],
                    ),
                ),
                ("certificate_issued", models.BooleanField(default=False)),
                ("certificate_issued_at", models.DateTimeField(blank=True, null=True)),
                ("enrolled_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "completed_lessons",
                    models.ManyToManyField(
                        blank=True,
                        related_name="completed_by_users",
                        to="courses.courselesson",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="courses.course",
                    ),
                ),
                (
                    "current_lesson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="courses.courselesson",
                    ),
                ),
                (
                    "current_module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="courses.coursemodule",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="course_enrollments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CoursePayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("stripe", "Stripe"),
                            ("paypal", "PayPal"),
                            ("razorpay", "Razorpay"),
                            ("manual", "Manual"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("refunded", "Refunded"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        max_length=15,
                    ),
                ),
                ("transaction_id", models.CharField(blank=True, max_length=255)),
                ("gateway_response", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "enrollment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="courses.usercourseenrollment",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseCertificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("certificate_id", models.CharField(max_length=100, unique=True)),
                ("issued_at", models.DateTimeField(auto_now_add=True)),
                ("is_valid", models.BooleanField(default=True)),
                ("student_name", models.CharField(max_length=255)),
                ("course_title", models.CharField(max_length=255)),
                ("completion_date", models.DateField()),
                ("instructor_name", models.CharField(max_length=255)),
                (
                    "enrollment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="certificate",
                        to="courses.usercourseenrollment",
                    ),
                ),
            ],
            options={
                "ordering": ["-issued_at"],
            },
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["status", "course_type"], name="courses_cou_status_05e628_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["difficulty", "category"], name="courses_cou_difficu_de4201_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["-created_at"], name="courses_cou_created_c141ec_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="coursemodule",
            unique_together={("course", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="courselesson",
            unique_together={("module", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="coursereview",
            unique_together={("user", "course")},
        ),
        migrations.AddIndex(
            model_name="usercourseenrollment",
            index=models.Index(
                fields=["user", "status"], name="courses_use_user_id_a33ea6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usercourseenrollment",
            index=models.Index(
                fields=["course", "status"], name="courses_use_course__7dbc9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usercourseenrollment",
            index=models.Index(
                fields=["-enrolled_at"], name="courses_use_enrolle_412374_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="usercourseenrollment",
            unique_together={("user", "course")},
        ),
    ]
